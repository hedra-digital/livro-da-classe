<%= render "navigation" %>

<div id="pdfloading">Carregando...</div>
<div id="pdfrenderer">
<div>
  <button id="prev" onclick="goPrevious()">Previous</button>
  <button id="next" onclick="goNext()">Next</button>
  &nbsp; &nbsp;
  <span>Page: <span id="page_num"></span> / <span id="page_count"></span></span>
</div>  
<canvas id="the-canvas" style="border:1px solid black;"/>
</div>



<script type="text/javascript">
  PDFJS.workerSrc = '/assets/pdf.js';
  var url = '<%= url_for( book_path(:format => :pdf)) %>';
  var pdfDoc = null;
  var pageNum = 1;
  var scale = 1.1;
  
    var canvas = document.getElementById('the-canvas');
    var ctx = canvas.getContext('2d');

    function renderPage(num) {
      // Using promise to fetch the page
      pdfDoc.getPage(num).then(function(page) {
        var viewport = page.getViewport(scale);
        canvas.height = viewport.height;
        canvas.width = viewport.width;

        // Render PDF page into canvas context
        var renderContext = {
          canvasContext: ctx,
          viewport: viewport
        };
        page.render(renderContext);
      });

      // Update page counters
      document.getElementById('page_num').textContent = pageNum;
      document.getElementById('page_count').textContent = pdfDoc.numPages;

      $("#pdfloading").hide();
      $("#pdfrenderer").show();
    }

 
    //
    // Go to previous page
    //
    function goPrevious() {
      if (pageNum <= 1)
        return;
      pageNum--;
      renderPage(pageNum);
    }

    //
    // Go to next page
    //
    function goNext() {
      if (pageNum >= pdfDoc.numPages)
        return;
      pageNum++;
      renderPage(pageNum);
    }

    //
    // Asynchronously download PDF as an ArrayBuffer
    //
    PDFJS.getDocument(url).then(function getPdfHelloWorld(_pdfDoc) {
      pdfDoc = _pdfDoc;
      renderPage(pageNum);
    });
</script>

<style type="text/css">
  #pdfrenderer {display: none;}
</style>
